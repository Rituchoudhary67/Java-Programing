Day 11 - 2D Arrays in java
it is similar to martix(ixj)

Syntax : type[][] arrayName = new type[rows][columns];
 ex :    int[][] num = new int[i][j];

1] Taking a matrix as an input and printing its element.
code link : https://onecompiler.com/java/42fbfc59s

2] Take a matrix as input from user. search for a given number x and print the indices at which it occurs.
code link : https://onecompiler.com/java/42fbhp2u8


// Day 11-2D Arrays
// 1] Taking a matrix as an input and printing its element.
import java.util.*;

public class Arrays2D {
  public static void main (String[] args) {
    Scanner sc = new Scanner(System.in);
    int rows = sc.nextInt();
    int cols = sc.nextInt();
    System.out.println("Rowsn Number are : " + rows);
    System.out.println("Columns Number are : " + cols);
    int[][] number = new int[rows][cols]; 
    
    // input 
    // outer loop for row 
    for(int i=0; i<rows; i++) {
      // inner loop for Columns
      for(int j=0; j<cols; j++) {
        number[i][j] = sc.nextInt();
      }
    }
    
    // output loop 
    for(int i=0; i<rows; i++) {
      for(int j=0; j<cols; j++) {
        System.out.print(number[i][j] + " ");
      }
      System.out.println();
    }
    
  }
}



// Qs. Take a matrix as input from user. search for a given number x and print the indices 
    // at which it occurs .
import java.util.*;

public class Array2D {
  public static void main (String[] args) {
    Scanner sc = new Scanner(System.in);
    int rows = sc.nextInt();
    int cols = sc.nextInt();
    
    System.out.println("Rows are : " + rows + " ;   Columns are : " + cols);
    
    int[][] matrix = new int[rows][cols];
    
    
    // input of array items 
    // outer loop for rows 
    for(int i=0; i<rows; i++) {
      // inner loop for Columns
      for(int j=0; j<cols; j++) {
        matrix[i][j] = sc.nextInt();
      }
    }
    
    int searchNum = sc.nextInt();
    System.out.println("Search number is : " + searchNum);
    
    
    
    // output of loop 
    for(int i=0; i<rows; i++) {
      for(int j=0; j<cols; j++) {
        System.out.print(matrix[i][j] + " ");  
        if (matrix[i][j] == searchNum) {
          System.out.print("    Search number is found at location ( " + i +" , " + j + " )");
        }
      }
        System.out.println();
    }
    
    
  }
}

************************  HomeWork Problem  *****************************
1] Print the sprial order matrix as output for a given matrix of numbers.
    1   5   7   9   10  11
    6   10  12  13  20  21
    9   25  29  30  32  41
    15  55  59  63  68  70
    40  70  79  81  95  105
code link : https://onecompiler.com/java/42fey4yvp


// 1] Print the sprial order matrix as output for a given matrix of numbers.
//     1   5   7   9   10  11
//     6   10  12  13  20  21
//     9   25  29  30  32  41
//     15  55  59  63  68  70
    // 40  70  79  81  95  105
import java.util.*;

public class Arrays {
  public static void main (String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int m = sc.nextInt();
    
    int matrix[][] = new int[n][m];
    
    for(int i=0; i<n; i++) {
      for(int j=0; j<m; j++) {
        matrix[i][j] = sc.nextInt();
      }
    }
    
    System.out.println("The sprial order matrix is : ");
    int rowStart = 0;
    int rowEnd = n-1;
    int colStart = 0;
    int colEnd = m-1;
    
    //to print sprial order matrix
    while( rowStart <=rowEnd  && colStart <=colEnd ) {
      
      //1
      
      for(int col = colStart; col <=colEnd; col++) {
      System.out.print(matrix[rowStart][col] +  " ");  
      }
      rowStart++;
      
      //2
      for(int row=rowStart; row <=rowEnd; row++) {
        System.out.print(matrix[row][colEnd] + " ");
      }
      colEnd--;
      
      //3
      for(int col=colEnd; col>=colStart; col--) {
        System.out.print(matrix[rowEnd][col] + " ");
      }
      rowEnd--;
      
      //4
      for(int row = rowEnd; row >=rowStart; row--) {
        System.out.print(matrix[row][colStart] +  " ");
      }
      colStart--;
      
      System.out.println();  
    }
    
    
  }
}
